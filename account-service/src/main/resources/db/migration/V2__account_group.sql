ALTER TABLE IF EXISTS account.ACCOUNT_GROUP_ACCOUNT RENAME TO ACCOUNT_GROUP_MEMBER;

ALTER TABLE IF EXISTS account.ACCOUNT_GROUP
    ADD COLUMN IF NOT EXISTS PARENT_ACCOUNT_GROUP_ID BIGINT REFERENCES ACCOUNT_GROUP (ID),
    ALTER COLUMN NAME type VARCHAR(40);

ALTER TABLE IF EXISTS account.ACCOUNT
    DROP COLUMN IF EXISTS ROLES;

CREATE TABLE IF NOT EXISTS account.ROLE(
    ID BIGSERIAL PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS account.PERMISSION(
    ID BIGSERIAL PRIMARY KEY,
    NAME VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS account.ROLE_PERMISSION(
    ROLE_ID BIGINT REFERENCES ROLE(ID),
    PERMISSION_ID BIGINT REFERENCES PERMISSION(ID),
    CONSTRAINT ROLE_PERMISSION_PK PRIMARY KEY ( ROLE_ID, PERMISSION_ID )
);

INSERT INTO account.PERMISSION ("id", "name") VALUES
 (1, 'LIST_PANTRY'),
 (2, 'CREATE_PANTRY'),
 (3, 'EDIT_PANTRY'),
 (4, 'DELETE_PANTRY'),
 (5, 'LIST_PANTRY_ITEM'),
 (6, 'ADD_PANTRY_ITEM'),
 (7, 'EDIT_PANTRY_ITEM'),
 (8, 'DELETE_PANTRY_ITEM'),
 (9, 'CONSUME_PANTRY_ITEM'),
 (10, 'LIST_PRODUCT'),
 (11, 'CREATE_PRODUCT'),
 (12, 'EDIT_PRODUCT'),
 (13, 'DELETE_PRODUCT'),
 (14, 'ANALYSE_PANTRY_ITEM') on conflict do nothing;

INSERT INTO account.ROLE ("id", "name") VALUES
 (1, 'OWNER'),
 (2, 'ADMIN'),
 (3, 'USER') on conflict do nothing;

INSERT INTO account.ROLE_PERMISSION ("role_id", "permission_id") VALUES
 (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13),(1,14),
 (2, 1), (2, 5), (2, 6), (2, 7), (2, 9), (2, 10),(2,14),
 (3, 1), (3, 5), (3, 9), (3, 10) on conflict do nothing;;

ALTER TABLE account.ACCOUNT_GROUP_MEMBER
    DROP COLUMN IF EXISTS ROLE;

ALTER TABLE account.ACCOUNT_GROUP_MEMBER
    ADD COLUMN IF NOT EXISTS ROLE_ID BIGINT NOT NULL REFERENCES ROLE(ID) DEFAULT 1;
