server:
  port: 8082
spring:
  application:
    name: account-service
  datasource:
    platform: postgres
    url: ${ACCOUNT_DB_URL}
    username: ${ACCOUNT_DB_USERNAME}
    password: ${ACCOUNT_DB_PASSWORD}
    schema: account
    hikari:
      minimum-idle: ${ACCOUNT_DB_IDLE_CONN}
      maximum-pool-size: ${ACCOUNT_DB_MAX_POOL_SIZE}
      idle-timeout: ${ACCOUNT_DB_IDLE_TIMEOUT}
  jpa:
    hibernate:
      ddl-auto: none
      defer-datasource-initialization: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  sql:
    init:
        mode: always
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      timeout: ${REDIS_TIMEOUT}
      username: ${REDIS_USERNAME:} # optional
      password: ${REDIS_PASSWORD:} # optional
      client-type: ${REDIS_CLIENT_TYPE:lettuce}
      repositories:
        enabled: false
  cache:
    type: redis
  flyway:
    baselineOnMigrate: ${ACCOUNT_SCHEMA_EXISTS}
    baselineVersion: 0
    encoding: ISO-8859-1
    defaultSchema: account
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_WEB_EXPOSURE}
kafka-config:
  bootstrap-servers-config: ${KAFKA_SERVER}
  account-topic: accountTopic
  group: pantryGroup
  partitions: ${PARTITIONS}
  replicas: ${REPLICAS}
security-config:
  secret: ${SECURITY_SECRET}
  allowedOrigin: ${ALLOWED_ORIGINS}
  googleClientId: ${GOOGLE_CLIENT_ID}
  googleClientSecret: ${GOOGLE_CLIENT_SECRET}
cache-config:
  role_TTL: ${ROLE_TTL}
  members_TTL: ${MEMBERS_TTL}
  acl_TTL: ${ACL_TTL}
logging:
  level:
    root: ${ROOT_LOG_LEVEL}
    org.hibernate.SQL: ${HIBERNATE_LOG_LEVEL}
    org.springframework.web: ${WEB_LOG_LEVEL}
    org.springframework.security: ${SECURITY_LOG_LEVEL}
