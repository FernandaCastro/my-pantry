server:
  port: 8082
spring:
  application:
    name: accountservice
  profiles:
    active: default
  config:
    import: optional:file:.dev.env[.properties]

  datasource:
    platform: postgres
    url: ${ACCOUNT_DB_URL:jdbc:postgresql://localhost:5434/account-db}
    username: ${ACCOUNT_DB_USERNAME:account}
    password: ${ACCOUNT_DB_PASSWORD:account}
    schema: account
    hikari:
      minimum-idle: ${ACCOUNT_DB_IDLE_CONN:0}
      maximum-poolsize: ${ACCOUNT_DB_MAX_POOL_SIZE:3}
      idle-timeout: ${ACCOUNT_DB_IDLE_TIMEOUT:60000}
  jpa:
    hibernate:
      ddl-auto: none
      defer-datasource-initialization: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: account

  sql:
    init:
        mode: always
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: ${REDIS_TIMEOUT:30000}
      repositories:
        enabled: false
  cache:
    type: redis
  flyway:
    baselineOnMigrate: ${ACCOUNT_SCHEMA_EXISTS:false}   #Set to true when schema is not empty
    baselineVersion: 0
    encoding: ISO-8859-1
    defaultSchema: account

openai:
  api:
    key: ${OPENAI_API_KEY}

management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_WEB_EXPOSURE:health}
    metrics:
      enable:
        all: true
kafka-config:
  bootstrap-servers-config: ${KAFKA_SERVER}
  account-topic: accountTopic
  command-topic: commandTopic
  group: accountGroup
  partitions: ${PARTITIONS:1}
  replicas: ${REPLICAS:1}
security-config:
  secret: ${SECURITY_SECRET}
  allowedOrigin: ${ALLOWED_ORIGINS}
  googleClientId: ${GOOGLE_CLIENT_ID}
  googleClientSecret: ${GOOGLE_CLIENT_SECRET}
cache-config:
  role_TTL: ${ROLE_TTL:5}
  members_TTL: ${MEMBERS_TTL:5}
  acl_TTL: ${ACL_TTL:5}
logging:
  level:
    root: ${ROOT_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${HIBERNATE_LOG_LEVEL:OFF}
    org.springframework.web: ${WEB_LOG_LEVEL:ERROR}
    org.springframework.security: ${SECURITY_LOG_LEVEL:ERROR}



