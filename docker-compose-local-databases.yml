services:
  pantry-db:
    container_name: pantry-db
    image: postgres
    environment:
      POSTGRES_DB: pantry-db
      POSTGRES_USER: pantry
      POSTGRES_PASSWORD: pantry
      PGDATA: /data/postgres
    volumes:
      - pantry-db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
      - spring
    restart: always

  purchase-db:
    container_name: purchase-db
    image: postgres
    environment:
      POSTGRES_DB: purchase-db
      POSTGRES_USER: purchase
      POSTGRES_PASSWORD: purchase
      PGDATA: /data/postgres
    volumes:
      - purchase-db:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres
      - spring
    restart: always

  account-db:
    container_name: account-db
    image: postgres
    environment:
      POSTGRES_DB: account-db
      POSTGRES_USER: account
      POSTGRES_PASSWORD: account
      PGDATA: /data/postgres
    volumes:
      - account-db:/data/postgres
    ports:
      - "5434:5432"
    networks:
      - postgres
      - spring
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  kafka-broker:
    image: apache/kafka:3.7.0
    container_name: kafka-broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://kafka-broker:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kafka-logs
      KAFKA_LOG_RETENTION_HOURS: 2
      KAFKA_LOG_RETENTION_BYTES: 536870912  #536Mb
      KAFKA_LOG_CLEANUP_POLICY: delete
      KAFKA_CLEANER_ENABLE: "true"
      KAFKA_CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    networks:
      - spring
    volumes:
      - kafka-data:/kafka-data
    restart: always

  pantry-service:
    image: fernandacastro/pantry-service:local
    build:
      context: pantry-service
      dockerfile: Dockerfile
    container_name: pantry-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SECURITY_SECRET=${SECURITY_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - AUTHZ_SERVER=${AUTHZ_SERVER:-http://account-service:8082}
      - KAFKA_SERVER=${KAFKA_SERVER:-kafka-broker:9092}
      - PARTITIONS=1
      - REPLICAS=1
      - PANTRY_DB_URL=${PANTRY_DB_URL:-jdbc:postgresql://pantry-db:5432/pantry-db}
      - PANTRY_DB_USERNAME=${PANTRY_DB_USERNAME:-pantry}
      - PANTRY_DB_PASSWORD=${PANTRY_DB_PASSWORD:-pantry}
      - PANTRY_SCHEMA_EXISTS=${PANTRY_SCHEMA_EXISTS:-false}
      - PANTRY_DB_IDLE_CONN=${PANTRY_DB_IDLE_CONN:-1}
      - PANTRY_DB_MAX_POOL_SIZE=${PANTRY_DB_MAX_POOL_SIZE:-2}
      - PANTRY_SCHEMA_EXISTS=${PANTRY_SCHEMA_EXISTS:-false}
      - ACTUATOR_WEB_EXPOSURE=${ACTUATOR_WEB_EXPOSURE:-health}
      - ROOT_LOG_LEVEL=${ROOT_LOG_LEVEL:-INFO}
      - HIBERNATE_LOG_LEVEL=${HIBERNATE_LOG_LEVEL:-OFF}
      - WEB_LOG_LEVEL=${WEB_LOG_LEVEL:-ERROR}
      - SECURITY_LOG_LEVEL=${SECURITY_LOG_LEVEL:-ERROR}
    networks:
      - spring
      - postgres
    depends_on:
      - kafka-broker
      - pantry-db
    restart: always

  purchase-service:
    image: fernandacastro/purchase-service:local
    build:
      context: purchase-service
      dockerfile: Dockerfile
    container_name: purchase-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SECURITY_SECRET=${SECURITY_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - AUTHZ_SERVER=${AUTHZ_SERVER:-http://account-service:8082}
      - KAFKA_SERVER=${KAFKA_SERVER:-kafka-broker:9092}
      - PARTITIONS=1
      - REPLICAS=1
      - PURCHASE_DB_URL=${PURCHASE_DB_URL:-jdbc:postgresql://purchase-db:5432/purchase-db}
      - PURCHASE_DB_USERNAME=${PURCHASE_DB_USERNAME:-purchase}
      - PURCHASE_DB_PASSWORD=${PURCHASE_DB_PASSWORD:-purchase}
      - PURCHASE_SCHEMA_EXISTS=${PURCHASE_SCHEMA_EXISTS:-false}
      - PURCHASE_DB_IDLE_CONN=${PURCHASE_DB_IDLE_CONN:-1}
      - PURCHASE_DB_MAX_POOL_SIZE=${PURCHASE_DB_MAX_POOL_SIZE:-2}
      - PURCHASE_SCHEMA_EXISTS=${PURCHASE_SCHEMA_EXISTS:-false}
      - ACTUATOR_WEB_EXPOSURE=${ACTUATOR_WEB_EXPOSURE:-health}
      - ROOT_LOG_LEVEL=${ROOT_LOG_LEVEL:-INFO}
      - HIBERNATE_LOG_LEVEL=${HIBERNATE_LOG_LEVEL:-OFF}
      - WEB_LOG_LEVEL=${WEB_LOG_LEVEL:-ERROR}
      - SECURITY_LOG_LEVEL=${SECURITY_LOG_LEVEL:-ERROR}
    networks:
      - spring
      - postgres
    depends_on:
      - kafka-broker
      - purchase-db
    restart: always

  redis-cache:
    container_name: redis-cache
    image: redis/redis-stack:7.4.0-v0
    volumes:
      - redis-cache:/local-data/:/data
    ports:
      - "6379:6379"
      - "8001:8001"
    networks:
      - spring
    restart: always
    #Redis Insight exposed on port 8001

  account-service:
    image: fernandacastro/account-service:local
    build:
      context: account-service
      dockerfile: Dockerfile
    container_name: account-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SECURITY_SECRET=${SECURITY_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - ACCOUNT_DB_URL=${ACCOUNT_DB_URL:-jdbc:postgresql://account-db:5432/account-db}
      - ACCOUNT_DB_USERNAME=${ACCOUNT_DB_USERNAME:-account}
      - ACCOUNT_DB_PASSWORD=${ACCOUNT_DB_PASSWORD:-account}
      - ACCOUNT_SCHEMA_EXISTS=${ACCOUNT_SCHEMA_EXISTS:-false}
      - ACCOUNT_DB_IDLE_CONN=${ACCOUNT_DB_IDLE_CONN:-1}
      - ACCOUNT_DB_MAX_POOL_SIZE=${ACCOUNT_DB_MAX_POOL_SIZE:-2}
      - REDIS_HOST=${REDIS_HOST:-redis-cache}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_TIMEOUT=${REDIS_TIMEOUT:-30000}
      - ROLE_TTL=${ROLE_TTL:-5}
      - MEMBERS_TTL=${MEMBERS_TTL:-5}
      - ACL_TTL=${ACL_TTL:-5}
      - ACTUATOR_WEB_EXPOSURE=${ACTUATOR_WEB_EXPOSURE:-health}
      - ROOT_LOG_LEVEL=${ROOT_LOG_LEVEL:-INFO}
      - HIBERNATE_LOG_LEVEL=${HIBERNATE_LOG_LEVEL:-OFF}
      - WEB_LOG_LEVEL=${WEB_LOG_LEVEL:-ERROR}
      - SECURITY_LOG_LEVEL=${SECURITY_LOG_LEVEL:-ERROR}
    networks:
      - spring
      - postgres
    depends_on:
      - redis-cache
      - account-db
    restart: always

  pantry-web:
    container_name: pantry-web
    image: fernandacastro/pantry-web:local
    build:
      context: pantry-web
      dockerfile: Dockerfile
      args:
        API_URL_PANTRY: ${API_URL_PANTRY}
        API_URL_PURCHASE: ${API_URL_PURCHASE}
        API_URL_ACCOUNT: ${API_URL_ACCOUNT}
        GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    ports:
      - "3000:3000"
    networks:
      - spring
    depends_on:
      - account-service
      - pantry-service
      - purchase-service
    restart: always

volumes:
  account-db:
  pantry-db:
  purchase-db:
  kafka-data:
  pgadmin:
  redis-cache:
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge